apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-dashboard
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metrics-reader
rules:
- apiGroups: [""]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-dashboard-metrics-reader
subjects:
- kind: ServiceAccount
  name: k8s-dashboard
  namespace: default
roleRef:
  kind: ClusterRole
  name: metrics-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cyberpunk-dashboard
  labels:
    app: cyberpunk-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cyberpunk-dashboard
  template:
    metadata:
      labels:
        app: cyberpunk-dashboard
    spec:
      serviceAccountName: k8s-dashboard
      containers:
      - name: dashboard
        image: your-registry.gitea.local/cyberpunk-dashboard:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: cyberpunk-dashboard
spec:
  selector:
    app: cyberpunk-dashboard
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cyberpunk-dashboard
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: dashboard.cluster.local  # Change this to your preferred domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cyberpunk-dashboard
            port:
              number: 80